name: Deploy Client to AWS EC2

on:
  push:
    branches:
      - main
      - staging
    paths:
      - 'client/**'

jobs:
  deploy-client:
    name: Deploy Client
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Target Directory and Secrets
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "TARGET_DIR=e360-main" >> $GITHUB_ENV
            echo "AWS_HOST=${{ secrets.AWS_HOST_PROD }}" >> $GITHUB_ENV
            echo "AWS_USER=${{ secrets.AWS_USER_PROD }}" >> $GITHUB_ENV
            echo "VITE_BACKEND_BASE_URL=${{ secrets.VITE_BACKEND_BASE_URL_PROD }}" >> $GITHUB_ENV
            {
              echo 'AWS_PRIVATE_KEY<<EOF'
              echo '${{ secrets.AWS_PRIVATE_KEY_PROD }}'
              echo 'EOF'
            } >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" = "staging" ]; then
            echo "TARGET_DIR=e360-staging" >> $GITHUB_ENV
            echo "AWS_HOST=${{ secrets.AWS_HOST }}" >> $GITHUB_ENV
            echo "AWS_USER=${{ secrets.AWS_USER }}" >> $GITHUB_ENV
            echo "VITE_BACKEND_BASE_URL=${{ secrets.VITE_BACKEND_BASE_URL }}" >> $GITHUB_ENV
            {
              echo 'AWS_PRIVATE_KEY<<EOF'
              echo '${{ secrets.AWS_PRIVATE_KEY }}'
              echo 'EOF'
            } >> $GITHUB_ENV
          fi

      - name: Cache Client Dependencies
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: ${{ runner.os }}-client-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-client-

      - name: Build Client
        run: |
          cd client
          echo -e "VITE_BACKEND_BASE_URL=${{ env.VITE_BACKEND_BASE_URL }}" > .env
          npm ci
          npm run build

      - name: Clean and Prepare Remote Client Directory
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.AWS_HOST }}
          username: ${{ env.AWS_USER }}
          key: ${{ env.AWS_PRIVATE_KEY }}
          script: |
            # Source the profile to load Node.js PATH (if needed for any commands)
            source ~/.bashrc || source ~/.bash_profile || true
            
            # Alternative: Add common Node.js paths manually
            export PATH="$PATH:/usr/local/bin:/usr/bin:$HOME/.nvm/versions/node/*/bin"
            
            sudo rm -rf /home/ubuntu/e360consult/${{ env.TARGET_DIR }}/client/dist
            mkdir -p /home/ubuntu/e360consult/${{ env.TARGET_DIR }}/client/

      - name: Deploy Client Build Files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.AWS_HOST }}
          username: ${{ env.AWS_USER }}
          key: ${{ env.AWS_PRIVATE_KEY }}
          source: "client/dist/"
          target: "/home/ubuntu/e360consult/${{ env.TARGET_DIR }}/client"
          strip_components: 1

      - name: Set Permissions and Verify Deployment
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.AWS_HOST }}
          username: ${{ env.AWS_USER }}
          key: ${{ env.AWS_PRIVATE_KEY }}
          script: |
            # Source the profile to load Node.js PATH (if needed for any commands)
            source ~/.bashrc || source ~/.bash_profile || true
            
            # Alternative: Add common Node.js paths manually
            export PATH="$PATH:/usr/local/bin:/usr/bin:$HOME/.nvm/versions/node/*/bin"
            
            sudo chown -R ubuntu:ubuntu /home/ubuntu/e360consult/${{ env.TARGET_DIR }}/client
            if [ ! -f "/home/ubuntu/e360consult/${{ env.TARGET_DIR }}/client/dist/index.html" ]; then
              echo "Client deployment verification failed - index.html not found in dist folder"
              exit 1
            fi
            echo "Client deployment to ${{ env.TARGET_DIR }} completed successfully"